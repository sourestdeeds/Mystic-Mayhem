/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class MedTreasurePileAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new MedTreasurePileAddonDeed();
			}
		}

		[ Constructable ]
		public MedTreasurePileAddon()
		{


			AddComponent( new AddonComponent( 7008 ), 2, 0, 0 );


			AddComponent( new AddonComponent( 7011 ), 0, 1, 0 );


			AddComponent( new AddonComponent( 7014 ), -1, -1, 0 );

			AddComponent( new AddonComponent( 7009 ), 1, 0, 0 );

			AddComponent( new AddonComponent( 7017 ), 1, -1, 0 );


			AddComponent( new AddonComponent( 7007 ), 3, 0, 0 );


			AddComponent( new AddonComponent( 7013 ), -1, 0, 0 );


			AddComponent( new AddonComponent( 7018 ), 2, -1, 0 );


			AddComponent( new AddonComponent( 7010 ), 1, 1, 0 );


			AddComponent( new AddonComponent( 7016 ), 0, -1, 0 );

			AddComponent( new AddonComponent( 7015 ), 0, 0, 0 );


			//AddonComponent ac = null;

		}

		public MedTreasurePileAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class MedTreasurePileAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new MedTreasurePileAddon();
			}
		}

		[Constructable]
		public MedTreasurePileAddonDeed()
		{
			Name = "MedTreasurePile";
		}

		public MedTreasurePileAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}