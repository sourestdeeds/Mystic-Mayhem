using System;
using Server;
using Server.Items;

namespace Server.Mobiles
{
	[CorpseName( "a hydra corpse" )]
	public class CrystalHydra : BaseCreature
	{
		[Constructable]
		public CrystalHydra() : base( AIType.AI_Mage, FightMode.Closest, 10, 1, 0.2, 0.4 )
		{
			Name = "CrystalHydra";
			Body = 265;
			Hue = 1150;
			BaseSoundID = 0x388;

			SetStr( 800, 830 );
			SetDex( 100, 120 );
			SetInt( 100, 110 );

			SetHits( 1465, 1500 );
			SetStam( 100, 120 );
			SetMana( 100, 110 );

			SetDamage( 21, 30 );

			SetDamageType( ResistanceType.Physical, 5 );
			SetDamageType( ResistanceType.Cold, 80 );
			SetDamageType( ResistanceType.Fire, 5 );
			SetDamageType( ResistanceType.Energy, 5 );
			SetDamageType( ResistanceType.Poison, 5 );

			SetResistance( ResistanceType.Physical, 65, 75 );
			SetResistance( ResistanceType.Fire, 50, 70 );
			SetResistance( ResistanceType.Cold, 85, 100 );
			SetResistance( ResistanceType.Poison, 65, 75 );
			SetResistance( ResistanceType.Energy, 80, 100 );

			SetSkill( SkillName.Anatomy, 75.2, 79.1 );
			SetSkill( SkillName.MagicResist, 89.9, 99.5 );
			SetSkill( SkillName.Tactics, 101.7, 108.1 );
			SetSkill( SkillName.Wrestling, 100.6, 115.1 );
			SetSkill( SkillName.Magery, 99.1,120.0 );
			SetSkill( SkillName.EvalInt, 90.3, 109.8 );
			SetSkill( SkillName.Meditation, 90.1, 119.6 );

			Fame = 8000;
			Karma = -8000;

			VirtualArmor = 70;

			//PackItem( new GnarledStaff() );
			PackNecroReg( 50, 80 );

			if ( Utility.RandomDouble() <= 0.30 )
				PackItem( new ShatteredCrystal() );
		}

		public override void GenerateLoot()
		{
			AddLoot( LootPack.Rich );
			AddLoot( LootPack.MedScrolls, 2 );
		}

		public override bool CanRummageCorpses{ get{ return true; } }
		public override Poison PoisonImmune{ get{ return Poison.Lethal; } }
		public override int TreasureMapLevel{ get{ return 4; } }
		public override bool HasBreath{ get{ return true; } }
		public override bool BardImmune{ get{ return true; } }

		public CrystalHydra( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( (int) 0 );
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}