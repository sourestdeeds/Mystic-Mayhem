using System;
using System.Collections;
using Server.Items;
using Server.Targeting;

namespace Server.Mobiles
{
	[CorpseName( "a tormented minotaur corpse" )]
	
	public class TormentedMinotaur : BaseCreature
	{
		[Constructable]
		public TormentedMinotaur() : base( AIType.AI_Melee, FightMode.Closest, 10, 1, 0.2, 0.4 )
		{
			Name = "a Tormented Minotaur";
			Body = 262;
			BaseSoundID = 427;

			SetStr( 767, 945 );
			SetDex( 366, 375 );
			SetInt( 146, 170 );

			SetHits( 11760, 12520 );

			SetDamage( 38, 45 );

			SetDamageType( ResistanceType.Physical, 100 );			

			SetResistance( ResistanceType.Physical, 85, 95 );
			SetResistance( ResistanceType.Cold, 60, 70 );
			SetResistance( ResistanceType.Poison, 100 );
			SetResistance( ResistanceType.Energy, 40, 50 );
			SetResistance( ResistanceType.Fire, 40, 50 );

			SetSkill( SkillName.MagicResist, 125.1, 140.0 );
			SetSkill( SkillName.Tactics, 120.1, 140.0 );
			SetSkill( SkillName.Wrestling, 120.1, 140.0 );

			Fame = 15000;
			Karma = -15000;

			VirtualArmor = 70;

			PackItem( new Club() );
		}

		public override void OnDeath( Container c )
		{
			if ( Utility.Random( 3 ) < 1 )
				c.DropItem( new Corruption() );
			/*int swtch = Utility.Random(300);
			if ( swtch < 80 )
			{
				switch ( Utility.Random( 6 ) )
				{
				case 0: c.DropItem( new OvenMitts(2) ); break;
				case 1: c.DropItem( new NimbleFingers(2) ); break;
				case 2: c.DropItem( new RubberGloves(2) ); break;
				case 3: c.DropItem( new TailorsTouch(2) ); break;
				case 4: c.DropItem( new TinkersAid(2) ); break;
				case 5: c.DropItem( new WoodWonder(2) ); break;
				}
			}
			else if ( swtch < 115 )
			{
				switch ( Utility.Random( 6 ) )
				{
				case 0: c.DropItem( new OvenMitts(4) ); break;
				case 1: c.DropItem( new NimbleFingers(4) ); break;
				case 2: c.DropItem( new RubberGloves(4) ); break;
				case 3: c.DropItem( new TailorsTouch(4) ); break;
				case 4: c.DropItem( new TinkersAid(4) ); break;
				case 5: c.DropItem( new WoodWonder(4) ); break;
				}
			}
			else if ( swtch < 125 )
			{
				switch ( Utility.Random( 6 ) )
				{
				case 0: c.DropItem( new OvenMitts(4) ); break;
				case 1: c.DropItem( new NimbleFingers(4) ); break;
				case 2: c.DropItem( new RubberGloves(4) ); break;
				case 3: c.DropItem( new TailorsTouch(4) ); break;
				case 4: c.DropItem( new TinkersAid(4) ); break;
				case 5: c.DropItem( new WoodWonder(4) ); break;
				}
			} */

			base.OnDeath( c );
		}


		public override void GenerateLoot()
		{
			AddLoot( LootPack.FilthyRich );
		}

		public override Poison PoisonImmune{ get{ return Poison.Regular; } }
		public override int TreasureMapLevel{ get{ return 6; } }

		public TormentedMinotaur( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( (int) 0 );
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}